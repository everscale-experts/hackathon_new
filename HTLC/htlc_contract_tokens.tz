{ parameter
    (or (or (pair %createLock
               (pair (pair (nat %amount_tokens) (address %dest1))
                     (pair (bytes %hash1) (nat %id_tokens)))
               (address %tokenAddress))
            (list %default_token
               (pair (pair %request (address %owner) (nat %token_id)) (nat %balance))))
        (pair %openLock (address %dest) (bytes %secret))) ;
  storage
    (pair (pair (big_map %balances_token address (map nat nat))
                (big_map %chests
                   address
                   (pair (pair (pair (address %addressToken) (int %counter))
                               (pair (timestamp %date) (address %dest)))
                         (pair (pair (bytes %hash) (nat %id_tokens)) (nat %value)))))
          (pair (big_map %chests_for_check
                   int
                   (pair (pair (pair (address %addressToken) (timestamp %date))
                               (pair (address %dest) (bytes %hash)))
                         (pair (pair (nat %id_tokens) (address %owner)) (nat %value))))
                (int %counter))) ;
  code { UNPAIR ;
         IF_LEFT
           { IF_LEFT
               { DUP ;
                 DUG 2 ;
                 CDR ;
                 CDR ;
                 CDR ;
                 CDR ;
                 PAIR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 CDR ;
                 CDR ;
                 CAR ;
                 DUP 3 ;
                 CDR ;
                 CDR ;
                 CAR ;
                 PAIR ;
                 DUP 3 ;
                 CDR ;
                 CAR ;
                 DIG 3 ;
                 CAR ;
                 DIG 2 ;
                 UNPAIR ;
                 DIG 4 ;
                 UNPAIR ;
                 PUSH int 1 ;
                 DUP 3 ;
                 CDR ;
                 CDR ;
                 ADD ;
                 DUP 3 ;
                 CDR ;
                 CAR ;
                 PAIR ;
                 DIG 2 ;
                 CAR ;
                 PAIR ;
                 DUP 6 ;
                 DUP 6 ;
                 PAIR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CAR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 GET ;
                 IF_NONE
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     DUP 3 ;
                     CAR ;
                     CDR ;
                     DIG 3 ;
                     CAR ;
                     CAR ;
                     EMPTY_MAP nat nat ;
                     PUSH nat 0 ;
                     DUP 6 ;
                     CDR ;
                     SWAP ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     PUSH nat 0 ;
                     SOME ;
                     DUP 6 ;
                     CDR ;
                     UPDATE ;
                     SOME ;
                     DIG 4 ;
                     CAR ;
                     UPDATE ;
                     PAIR ;
                     PAIR }
                   { DUP ;
                     DUP 3 ;
                     CDR ;
                     GET ;
                     IF_NONE
                       { DUP 3 ;
                         CDR ;
                         DUP 4 ;
                         CAR ;
                         CDR ;
                         DIG 4 ;
                         CAR ;
                         CAR ;
                         DIG 3 ;
                         PUSH nat 0 ;
                         SOME ;
                         DUP 6 ;
                         CDR ;
                         UPDATE ;
                         SOME ;
                         DIG 4 ;
                         CAR ;
                         UPDATE ;
                         PAIR ;
                         PAIR }
                       { DROP 3 } } ;
                 NIL operation ;
                 PAIR ;
                 CDR ;
                 DUP 5 ;
                 CONTRACT %balance_of
                   (pair (list %requests (pair (address %owner) (nat %token_id)))
                         (contract %callback
                            (list (pair (pair %request (address %owner) (nat %token_id)) (nat %balance))))) ;
                 IF_NONE { PUSH string "Not a balance_of" ; FAILWITH } {} ;
                 SELF_ADDRESS ;
                 CONTRACT %default_token
                   (list (pair (pair %request (address %owner) (nat %token_id)) (nat %balance))) ;
                 IF_NONE { PUSH string "Error: Not a callback_balance" ; FAILWITH } {} ;
                 DUP 8 ;
                 SELF_ADDRESS ;
                 PAIR ;
                 NIL operation ;
                 DIG 3 ;
                 PUSH mutez 0 ;
                 DIG 4 ;
                 NIL (pair address nat) ;
                 DIG 5 ;
                 CONS ;
                 PAIR ;
                 TRANSFER_TOKENS ;
                 CONS ;
                 PUSH nat 2 ;
                 DUP 5 ;
                 COMPARE ;
                 LT ;
                 IF { PUSH string "Error: you have transfered few tokens" ; FAILWITH } {} ;
                 DIG 3 ;
                 SENDER ;
                 DIG 7 ;
                 PAIR ;
                 PAIR ;
                 DIG 4 ;
                 DIG 4 ;
                 PAIR ;
                 PUSH int 3600 ;
                 NOW ;
                 ADD ;
                 DIG 5 ;
                 PAIR ;
                 PAIR ;
                 PAIR ;
                 DUP 3 ;
                 CDR ;
                 CDR ;
                 DUP 4 ;
                 CDR ;
                 CAR ;
                 DIG 2 ;
                 SOME ;
                 DUP 5 ;
                 CDR ;
                 CDR ;
                 UPDATE ;
                 PAIR ;
                 DIG 2 ;
                 CAR ;
                 PAIR ;
                 SWAP ;
                 PAIR }
               { IF_CONS { SWAP ; DROP ; SOME } { NONE (pair (pair address nat) nat) } ;
                 IF_NONE { PUSH string "Not a List" ; FAILWITH } {} ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CAR ;
                 SENDER ;
                 GET ;
                 IF_NONE { PUSH string "Error balance token" ; FAILWITH } {} ;
                 DUP ;
                 DUP 3 ;
                 CAR ;
                 CDR ;
                 GET ;
                 IF_NONE { PUSH string "Error balance id token" ; FAILWITH } {} ;
                 DUP 4 ;
                 CAR ;
                 CAR ;
                 DIG 2 ;
                 DUP 4 ;
                 CDR ;
                 SOME ;
                 DUP 5 ;
                 CAR ;
                 CDR ;
                 UPDATE ;
                 SOME ;
                 SENDER ;
                 UPDATE ;
                 DUP 4 ;
                 CDR ;
                 DIG 4 ;
                 CAR ;
                 CDR ;
                 DIG 2 ;
                 PAIR ;
                 PAIR ;
                 DIG 2 ;
                 CDR ;
                 DIG 2 ;
                 SUB ;
                 ABS ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 CAR ;
                 DUP 3 ;
                 CDR ;
                 CDR ;
                 GET ;
                 IF_NONE { PUSH string "Error balance token" ; FAILWITH } {} ;
                 DUP ;
                 CAR ;
                 CAR ;
                 CAR ;
                 SENDER ;
                 COMPARE ;
                 NEQ ;
                 IF { PUSH string "Error: call method contract" ; FAILWITH } {} ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 CDR ;
                 COMPARE ;
                 GT ;
                 IF { PUSH string "Error transfer amount" ; FAILWITH } {} ;
                 PUSH nat 1 ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 CDR ;
                 SUB ;
                 ABS ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 CAR ;
                 CAR ;
                 DUP 3 ;
                 CAR ;
                 CDR ;
                 CDR ;
                 PAIR ;
                 PAIR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CDR ;
                 CAR ;
                 PUSH int 3600 ;
                 NOW ;
                 ADD ;
                 PAIR ;
                 DUP 4 ;
                 CDR ;
                 CDR ;
                 DUP 4 ;
                 CAR ;
                 CAR ;
                 CAR ;
                 PAIR ;
                 PAIR ;
                 PAIR ;
                 DUP 3 ;
                 CDR ;
                 DUP 4 ;
                 CAR ;
                 CDR ;
                 DIG 2 ;
                 SOME ;
                 DIG 3 ;
                 CDR ;
                 CAR ;
                 CDR ;
                 UPDATE ;
                 DIG 2 ;
                 CAR ;
                 CAR ;
                 PAIR ;
                 PAIR ;
                 DUP ;
                 CDR ;
                 CDR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 CAR ;
                 DUP 3 ;
                 CDR ;
                 CDR ;
                 NONE (pair (pair (pair address timestamp) (pair address bytes)) (pair (pair nat address) nat)) ;
                 SWAP ;
                 UPDATE ;
                 PAIR ;
                 SWAP ;
                 CAR ;
                 PAIR ;
                 NIL operation ;
                 PAIR } }
           { UNPAIR ;
             PUSH nat 0 ;
             PUSH nat 0 ;
             DUP 4 ;
             SHA256 ;
             PAIR ;
             PAIR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             PUSH int 3600 ;
             NOW ;
             ADD ;
             PAIR ;
             DUP 5 ;
             CDR ;
             CDR ;
             DUP 4 ;
             PAIR ;
             PAIR ;
             PAIR ;
             DUP 4 ;
             CAR ;
             CDR ;
             SENDER ;
             GET ;
             IF_NONE { PUSH string "You have not chest" ; FAILWITH } { SWAP ; DROP } ;
             DUP 4 ;
             CAR ;
             CDR ;
             NONE (pair (pair (pair address int) (pair timestamp address)) (pair (pair bytes nat) nat)) ;
             SENDER ;
             UPDATE ;
             DUP 5 ;
             CDR ;
             SWAP ;
             DIG 5 ;
             CAR ;
             CAR ;
             PAIR ;
             PAIR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CAR ;
             CAR ;
             CONTRACT %transfer
               (list (pair (address %from_) (list %txs (pair (address %to_) (nat %token_id) (nat %amount))))) ;
             IF_NONE { PUSH string "Not a contract" ; FAILWITH } {} ;
             NIL operation ;
             NIL (pair address nat nat) ;
             DUP 5 ;
             CDR ;
             CDR ;
             DUP 6 ;
             CDR ;
             CAR ;
             CDR ;
             DIG 7 ;
             PAIR 3 ;
             CONS ;
             SELF_ADDRESS ;
             PAIR ;
             DUP 5 ;
             CDR ;
             CDR ;
             DUP 6 ;
             CDR ;
             CAR ;
             CDR ;
             SENDER ;
             PAIR 3 ;
             NIL (pair address nat nat) ;
             SWAP ;
             CONS ;
             SELF_ADDRESS ;
             PAIR ;
             DUP 6 ;
             CAR ;
             CDR ;
             CAR ;
             NOW ;
             COMPARE ;
             GT ;
             IF { SWAP ;
                  DIG 6 ;
                  DROP 2 ;
                  SWAP ;
                  DIG 2 ;
                  PUSH mutez 0 ;
                  NIL (pair address (list (pair address nat nat))) ;
                  DIG 4 ;
                  CONS ;
                  TRANSFER_TOKENS ;
                  CONS }
                { DUP 6 ;
                  CDR ;
                  CAR ;
                  CAR ;
                  DIG 7 ;
                  SHA256 ;
                  COMPARE ;
                  EQ ;
                  IF { DROP ;
                       SWAP ;
                       DIG 2 ;
                       PUSH mutez 0 ;
                       NIL (pair address (list (pair address nat nat))) ;
                       DIG 4 ;
                       CONS ;
                       TRANSFER_TOKENS ;
                       CONS }
                     { SWAP ;
                       DROP ;
                       SWAP ;
                       DIG 2 ;
                       PUSH mutez 0 ;
                       NIL (pair address (list (pair address nat nat))) ;
                       DIG 4 ;
                       CONS ;
                       TRANSFER_TOKENS ;
                       CONS } } ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CAR ;
             DUP 4 ;
             CAR ;
             CAR ;
             CAR ;
             GET ;
             IF_NONE { PUSH string "Error balance token" ; FAILWITH } {} ;
             DUP ;
             DUP 5 ;
             CDR ;
             CAR ;
             CDR ;
             GET ;
             IF_NONE { PUSH string "Error balance id token" ; FAILWITH } {} ;
             DUP 5 ;
             CDR ;
             CDR ;
             SWAP ;
             SUB ;
             ABS ;
             DUP 4 ;
             CDR ;
             DUP 5 ;
             CAR ;
             CDR ;
             DIG 5 ;
             CAR ;
             CAR ;
             DIG 4 ;
             DIG 4 ;
             SOME ;
             DUP 7 ;
             CDR ;
             CAR ;
             CDR ;
             UPDATE ;
             SOME ;
             DIG 5 ;
             CAR ;
             CAR ;
             CAR ;
             UPDATE ;
             PAIR ;
             PAIR ;
             SWAP ;
             PAIR } } }
