{ parameter
    (or (or (pair %createLockWithCoins (bytes %seed_f) (address %dest)) (unit %default))
        (pair %openLock (address %dest) (bytes %seed_f))) ;
  storage
    (pair (pair (big_map %chests
                   address
                   (pair (pair (pair (int %counter) (timestamp %date)) (pair (address %dest) (bytes %hash)))
                         (mutez %value)))
                (int %counter))
          (big_map %transfers_amounts address mutez)) ;
  code { UNPAIR ;
         IF_LEFT
           { IF_LEFT
               { UNPAIR ;
                 DUP 3 ;
                 CDR ;
                 PUSH int 1 ;
                 DUP 5 ;
                 CAR ;
                 CDR ;
                 ADD ;
                 DIG 4 ;
                 CAR ;
                 CAR ;
                 PAIR ;
                 PAIR ;
                 AMOUNT ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 SENDER ;
                 GET ;
                 IF_NONE { PUSH string "You have not transfer" ; FAILWITH } { SWAP ; DROP } ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 DROP ;
                 PUSH mutez 1000000 ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 COMPARE ;
                 LT ;
                 IF { PUSH string "Error balance HTLC contract" ; FAILWITH } {} ;
                 DIG 2 ;
                 SHA256 ;
                 DIG 3 ;
                 PAIR ;
                 PUSH int 3600 ;
                 NOW ;
                 ADD ;
                 DUP 4 ;
                 CAR ;
                 CDR ;
                 PAIR ;
                 PAIR ;
                 PAIR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CAR ;
                 SWAP ;
                 SOME ;
                 SENDER ;
                 UPDATE ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 DIG 2 ;
                 CAR ;
                 CDR ;
                 DIG 2 ;
                 PAIR ;
                 PAIR ;
                 NIL operation ;
                 PAIR }
               { DROP ;
                 AMOUNT ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 SWAP ;
                 SOME ;
                 SENDER ;
                 UPDATE ;
                 SWAP ;
                 CAR ;
                 PAIR ;
                 NIL operation ;
                 PAIR } }
           { UNPAIR ;
             PUSH mutez 0 ;
             DUP 3 ;
             SHA256 ;
             DUP 3 ;
             PAIR ;
             PUSH int 3600 ;
             NOW ;
             ADD ;
             PUSH int 0 ;
             PAIR ;
             PAIR ;
             PAIR ;
             DUP 4 ;
             CAR ;
             CAR ;
             SENDER ;
             GET ;
             IF_NONE { PUSH string "You have not chest" ; FAILWITH } { SWAP ; DROP } ;
             DUP 4 ;
             DROP ;
             SENDER ;
             CONTRACT unit ;
             IF_NONE { PUSH string "Not a contract" ; FAILWITH } {} ;
             DIG 2 ;
             CONTRACT unit ;
             IF_NONE { PUSH string "Not a contract" ; FAILWITH } {} ;
             DUP 3 ;
             CAR ;
             CAR ;
             CDR ;
             NOW ;
             COMPARE ;
             GT ;
             IF { DIG 3 ;
                  DROP 2 ;
                  SWAP ;
                  CDR ;
                  UNIT ;
                  TRANSFER_TOKENS ;
                  NIL operation ;
                  SWAP ;
                  CONS }
                { DUP 3 ;
                  CAR ;
                  CDR ;
                  CDR ;
                  DIG 4 ;
                  SHA256 ;
                  COMPARE ;
                  EQ ;
                  IF { SWAP ;
                       DROP ;
                       SWAP ;
                       CDR ;
                       UNIT ;
                       TRANSFER_TOKENS ;
                       NIL operation ;
                       SWAP ;
                       CONS }
                     { DROP ; SWAP ; CDR ; UNIT ; TRANSFER_TOKENS ; NIL operation ; SWAP ; CONS } } ;
             PAIR } } }
